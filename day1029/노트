*com.sist.draw
->그리기 색상에 대한 처리를 위하여
	LinePanel과 GraphiInfo에 클래스에
	color drawcolor 멤버변수를 추가함
	
*txt파일만들기 
Frame -> main

**메뉴만들기 순서
1)메뉴바를 먼저 생성하기
2)주메뉴를 만들기 ->JMenu
3)부메뉴를 만들기 ->JMenuItem
4)부메뉴를 주메뉴에 담기
5)주메뉴를 메뉴바에 담기
6)프레임에 메뉴바를 설정함 


메뉴를 눌렀을 때 이벤트 처리를 하기 위해서 
그 메뉴가 담긴 클래스에, Actionlistener 인터페이스를 구현함 
public class SistNote extends JFrame  implements ActionListener{

--> 오버라이딩 필수
부메뉴를 누르면 오버라이딩을 동작하게함  -> 그러기 위해선 이벤트를 등록
-> 이벤트 등록은 부메뉴가 만들어지고 난후에, 


**입출력을 위한 방법은 2가지
1)문자단위의 입출력 : 메모장은 문자단위의 입출력을 이용함
-문자단위의 입출력을 위한 클래스들의 최상위는 Reader(in),Writer(out)
-파일의 출력을 위해서 Writer의 후손인 FileWriter을 이용함
-JTextArea에 내용을 파일로 출력하기
-파일위치와 파일명을 선택하기 위해서 JFileChooser를 이용함 -> 어디다가 어떤 이름을? 다이얼로그 띄우기
2)바이트단위의 입출력



**그 선택한 파일에 텍스트에리어 쓰여진 내용을 출력하기 위한 스트림을 생성
문자단위의 출력을 위한 writer의후손인 fileWriter을 이용함
입출력관련된 모든 생성자와 메소드는 예외를 포함함
그 예외들은 RunTimeException의 후손이 아님-> 사용자가 처리

**JOptionPane.showConfirmDialog(this, "파일에 저장 성공");
콘솔에 출력하는 것이 아니라, 다이얼로그를 띄우는 것 : Joptionpan

**제목표시줄에 파일이름이 나타나도록 하기
-파일을 저장하지 않거나, 열어오지 않은 상태-> 제목없음
-파일을 저장하거나, 열어왔을 때-> 파일이름을 제목표시줄에 출력
파일이름은 Jfc의 getselectedFile  -> file



**파일의 삭제 
file클래스의 delete메소드를 이용해서 파일을 삭제할 수있음



**JList에서 선택한 파일이름이 무엇인지 알기 위해서 이벤트 등록->JList에 어떤 이벤트를 등록할 수 있는지
알기 위해서 Java API에서 add~~Listener로 되어잇는 메소드 찾기


**입출력**
자바에선 입출력과 관련한 클래스들을 ---java.io에 모아둠 
입출력을 위해선 자료가 순서있는 흐름이 되어야하는데 그건 ---스트림이라고 함
다른 프로그램에선 출력할 장치에 따라서(네트워크, 파일인지)별도의 스트림을 만들어야하지만, 
자바에선 출려할 장치상관없이 동일한 방식으로 입출력을 할 수 있도록 스트림이 만들어져있음  

자바에선 크게 두 가지 종류의 입출력(스트림)이 있음 
1)문자 단위 방식
-Reader, Writer

2)바이트 단위 방식
-InputStream, OutputStream

또, 객체단위로 입출력을 위한 클래스는 
InputStream의 후손인 ObjectInputStream
OutputStream 후손인 ObjectOutputStream
객체단위로 출력하기 위해서는 writeObject 메소드를 이용하고, 객체단위로 읽어들이기 위해서는 readObject메소드가 필요함

단, 이때 객체단위로 출력을 위한 클래스는 반드시 직렬화되어야함
이를 위해서 클래스 이름 뒤에 클래스를 만들 때에, Serializable이라고 붙여야함
